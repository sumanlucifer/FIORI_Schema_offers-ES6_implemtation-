<mvc:View controllerName="com.knpl.pragati.Manage_Notifications.controller.Object" xmlns="sap.m" xmlns:mvc="sap.ui.core.mvc"
	xmlns:core="sap.ui.core" xmlns:u="sap.ui.unified" xmlns:uxap="sap.uxap" xmlns:l="sap.ui.layout">
	<uxap:ObjectPageLayout id="ObjectPageLayout" showAnchorBar="true" showFooter="true" subSectionLayout="TitleOnLeft"
		binding="{objectView>/oDetails}" busy="{objectView>/busy}" busyIndicatorDelay="0" class="sapUiResponsiveContentPadding">
		<uxap:headerTitle>
			<!-- <uxap:ObjectPageHeader objectTitle="{objectView>/TtlNotification}"/> -->
            <uxap:ObjectPageHeader >
             <uxap:breadcrumbs>
                     <Breadcrumbs currentLocationText="{objectView>/TtlNotification}">
                        <Link press="onPressBreadcrumbLink" text="Notifications"/>
                    </Breadcrumbs>
                     </uxap:breadcrumbs>
                    </uxap:ObjectPageHeader>
        </uxap:headerTitle>
        
		<uxap:sections>
        
			<uxap:ObjectPageSection title="{i18n>objectViewTitle}">
				<uxap:subSections>
					<uxap:ObjectPageSubSection>
                    
						<l:Grid width="100%" defaultSpan="XL6 L6 M6 S12">
							<VBox>
								<Label required="true" text="{i18n>colSubject}"/>
								<Input width="100%" value="{objectView>Subject}" maxLength="50" editable="{= ${objectView>/sMode} !== 'V'}"/>
                                
							</VBox>
                            <VBox visible="{= ${objectView>/sMode} === 'V'}">
                                 <Label text="{i18n>CreatedBy}" />
                                <Text text="{path:'objectView>/oDetails/CreatedByDetails',formatter:'.formatter.fmtDisplayUpdatedDetails'}" />
                                <Label text="{i18n>CreatedAt}" />
                                <Text text="{path:'objectView>/oDetails/CreatedAt',type:'sap.ui.model.type.Date',formatOptions:{pattern:'dd/MM/YYYY h:mm a'}}"/>
                                <Label text="{i18n>LastUpdatedBy}" />
                                <Text text="{path:'objectView>/oDetails/UpdatedByDetails',formatter:'.formatter.fmtDisplayUpdatedDetails'}" />      
                                <Label text="{i18n>LastUpdatedAt}" />
                                <Text text="{path:'objectView>/oDetails/UpdatedAt',type:'sap.ui.model.type.Date',formatOptions:{pattern:'dd/MM/YYYY h:mm a'}}"/>
                            </VBox>
							<VBox>
								<Label required="true" text="{i18n>colBody}"/>
								<TextArea width="100%" value="{objectView>Body}" rows="4" maxLength="250" placeholder="{i18n>MessagePlaceHolder}" showExceededText="false"
									editable="{= ${objectView>/sMode} !== 'V'}"/>
                                    <ObjectAttribute title="Max Length" text="250 characters" />
							</VBox>
							<VBox>
								<Label text="{i18n>colRedirectionType}"/>
								<ComboBox width="100%" selectedKey="{objectView>RedirectionType}" change="onRedirectionChange" editable="{= ${objectView>/sMode} !== 'V'}">
									<items>
										<core:Item text="{i18n>screen}" key="SCREEN"/>
										<core:Item text="{i18n>link}" key="LINK"/>
									</items>
								</ComboBox>
							</VBox>
							<VBox>
								<Label visible="{= ${objectView>RedirectionType} === 'LINK'}" required="true" text="{i18n>colRedirectionTo}"/>
								<Input visible="{= ${objectView>RedirectionType} === 'LINK'}" width="100%" type="Url"  value="{objectView>RedirectionTo}"
									placeholder="{i18n>linkPlaceHolder}" editable="{= ${objectView>/sMode} !== 'V'}"/>
								<Label visible="{= ${objectView>RedirectionType} === 'SCREEN'}" required="true" text="{i18n>colRedirectionTo}"/>
								<ComboBox visible="{= ${objectView>RedirectionType} === 'SCREEN'}" width="100%" selectedKey="{objectView>RedirectionTo}"
									items="{ path: '/MasterRedirectionSet' }" editable="{= ${objectView>/sMode} !== 'V'}">
									<core:Item key="{RedirectionKey}" text="{RedirectionValue}"/>
								</ComboBox>
							</VBox>
							<VBox>
								<Label text="{i18n>colIsGroupNotification}"/>
								<Switch state="{objectView>IsGroupNotification}" customTextOn="Yes" customTextOff="No" enabled="{= ${objectView>/sMode} !== 'V'}">
									<layoutData>
										<FlexItemData growFactor="1"/>
									</layoutData>
								</Switch>
							</VBox>
							<VBox>
								<Label visible="{= ${objectView>IsGroupNotification} === true}" required="true" text="{i18n>colGroup}"/>
								<ComboBox id="idGroupCombo" visible="{= ${objectView>IsGroupNotification} === true}" width="100%" selectedKey="{objectView>GroupId}"
									items="{ path: '/NotificationGroupSet',filters: [{ path : 'IsArchived' , operator : 'EQ' , value1 : false }] }" editable="{= ${objectView>/sMode} !== 'V'}">
									<core:Item key="{Id}" text="{GroupName}"/>
								</ComboBox>
								<Label visible="{= ${objectView>IsGroupNotification} === false}" required="true" text="{i18n>colReceivers}"/>
								<!-- <MultiComboBox visible="{= ${objectView>IsGroupNotification} === false}" width="100%" selectedKeys="{objectView>Receivers}"
									items="{ path : '/UserSet', parameters : { expand : 'Role,Painter', 'select' : 'Id,RoleId,Role/Role,Painter/Name' }, groupHeaderFactory: '.getGroupHeader' }"
									editable="{= ${appView>/viewFlag} === 'Y'}">
									<core:Item key="{Id}" text="{Painter/Name}"/>
								</MultiComboBox> -->
                                 <MultiInput id="multiInputPainterAdd" editable="{= ${objectView>/sMode} !== 'V'}" visible="{= ${objectView>IsGroupNotification} === false}" tokens="{objectView>Receivers}" valueHelpRequest="onValueHelpRequestedPainter">
                                    <tokens>
                                        <Token editable="false" text="{objectView>PainterName}" key="{objectView>Id}"/>
                                    </tokens>
                                 </MultiInput>

							</VBox>
							<VBox>
								<Label text="{i18n>colIsLater}"/>
								<Switch state="{objectView>IsLater}" customTextOn="Yes" customTextOff="No" enabled="{= ${objectView>/sMode} !== 'V'}">
									<layoutData>
										<FlexItemData growFactor="1"/>
									</layoutData>
								</Switch>
							</VBox>
                            <VBox visible="{= ${objectView>IsLater} === true}">
							<VBox >
								<Label required="true" text="{i18n>colScheduledDate}"/>
								<DatePicker width="100%" valueFormat="dd MMM yyyy" displayFormat="dd MMM yyyy" value="{objectView>ScheduledDate}"
									editable="{= ${objectView>/sMode} !== 'V'}" minDate="{objectView>/currDate}"/>
							</VBox>
							<VBox>
								<Label required="true" text="{i18n>colScheduledTime}"/>
								<TimePicker id="idTimePicker" width="100%" change="onChangeTime" valueFormat="HH:mm" displayFormat="HH:mm" value="{objectView>ScheduledTime}"
									editable="{= ${objectView>/sMode} !== 'V'}" />
							</VBox>
                            </VBox>
						</l:Grid>
					</uxap:ObjectPageSubSection>
				</uxap:subSections>
			</uxap:ObjectPageSection>
		</uxap:sections>
		<uxap:footer>
			<Toolbar>
				<ToolbarSpacer/>
				<Button text="{i18n>btnCancel}" press="onCancel"/>
				<Button text="{i18n>btnDraft}" type="Accept" press="onDraft" enabled="{= ${objectView>/sMode} !== 'V'}"/>
				<Button text="{i18n>btnSchedule}" type="Emphasized" visible="{= ${objectView>IsLater} === true}" press="onPublish"
					enabled="{= ${objectView>/sMode} !== 'V'}"/>
				<Button text="{i18n>btnSend}" type="Emphasized" visible="{= ${objectView>IsLater} === false}" press="onPublish"
					enabled="{= ${objectView>/sMode} !== 'V'}"/>
			</Toolbar>
		</uxap:footer>
	</uxap:ObjectPageLayout>
</mvc:View>