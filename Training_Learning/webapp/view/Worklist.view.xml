<mvc:View controllerName="com.knpl.pragati.Training_Learning.controller.Worklist" xmlns:core="sap.ui.core" xmlns="sap.m"
	xmlns:mvc="sap.ui.core.mvc" xmlns:f="sap.f" xmlns:fb="sap.ui.comp.filterbar">
	<f:DynamicPage id="page">
		<f:title>
			<f:DynamicPageTitle>
				<f:heading>
					<Title text="{i18n>worklistTitle}"/>
				</f:heading>
			</f:DynamicPageTitle>
		</f:title>
		<f:header>
			<f:DynamicPageHeader pinnable="true">
				<f:content>
					<fb:FilterBar showRestoreButton="true" id="filterbar" reset="onReset" search="onSearch" useToolbar="false" showRestoreOnFB="true">
						<fb:filterGroupItems>
							<fb:FilterGroupItem visibleInFilterBar="true" groupName="A" name="TrainingSubTypeId" groupTitle="Filters" label="{i18n>colTrainingType}">
								<fb:control>
									<ComboBox placeholder="{i18n>enterTrType}" items="{ path: '/MasterTrainingSubTypeSet', parameters : { expand : 'MasterTrainingTypeDetails' }, filters : [ { path : 'IsArchived' , operator : 'EQ' , value1 : false } ] }" selectedKey="{worklistView>/filterBar/TrainingSubTypeId}">
										<core:Item key="{Id}" text="{TrainingSubType}-{MasterTrainingTypeDetails/TrainingType}"/>
									</ComboBox>
								</fb:control>
							</fb:FilterGroupItem>
                            <fb:FilterGroupItem visibleInFilterBar="true" groupName="A" name="StartDate" label="{i18n>colStartDate}">
                                <fb:control>
                                    <DatePicker placeholder="DD/MM/YYYY" id="idDpickerFilter" value="{path:'worklistView>/filterBar/StartDate', type:'sap.ui.model.type.Date', formatOptions: {pattern:'dd/MM/yyyy', UTC:false } }" displayFormat="dd/MM/yyyy"></DatePicker>
                                </fb:control>
                            </fb:FilterGroupItem>
                            <fb:FilterGroupItem visibleInFilterBar="true" groupName="A" name="RewardPoints" label="{i18n>colRewardPoints}">
                                <fb:control>
                                    <Input id="idPointInput" value="{worklistView>/filterBar/RewardPoints}" type="Number" placeholder="{i18n>PointFilterPlaceholder}" />
                                </fb:control>
                            </fb:FilterGroupItem>
                            <fb:FilterGroupItem visibleInFilterBar="true" groupName="A" name="Url" groupTitle="Filters" label="{i18n>colLink}">
								<fb:control>
									<ComboBox selectedKey="{worklistView>/filterBar/Link}" placeholder="{i18n>enterLink}">
                                        <items>
                                            <core:Item text="{i18n>Yes}" key="0"/>
                                            <core:Item text="{i18n>No}" key="1"/>
                                        </items>
                                    </ComboBox>
								</fb:control>
							</fb:FilterGroupItem>
                            <fb:FilterGroupItem visibleInFilterBar="true" groupName="A" name="Status" groupTitle="Filters" label="{i18n>colStatus}">
								<fb:control>
									<ComboBox selectedKey="{worklistView>/filterBar/Status}" placeholder="{i18n>enterStatus}">
                                        <items>
                                            <core:Item text="{i18n>inActive}" key="0"/>
                                            <core:Item text="{i18n>active}" key="1"/>
                                            <core:Item text="{i18n>Expired}" key="2"/>
                                        </items>
                                    </ComboBox>
								</fb:control>
							</fb:FilterGroupItem>
                            <fb:FilterGroupItem visibleInFilterBar="true" groupName="A" name="TrainingZone" groupTitle="Filters" label="{i18n>colZone}">
								<fb:control>
									<ComboBox items="{ path: '/MasterZoneSet' }" selectionChange="onZoneChange" selectedKey="{worklistView>/filterBar/TrainingZone}" placeholder="{i18n>enterZone}">
										<core:Item  enabled="{parts:['Id','LoginInfo>/UserTypeId','LoginInfo>/AdminZone'],formatter:'.formatter.fmtLeadZoneCheck'}"  key="{Id}" text="{Id}"/>
									</ComboBox>
								</fb:control>
							</fb:FilterGroupItem>
                            <fb:FilterGroupItem visibleInFilterBar="true" groupName="A" name="TrainingDivision" groupTitle="Filters" label="{i18n>colDivision}">
								<fb:control>
									<ComboBox items="{ path: '/MasterDivisionSet' }" id="idDivision" selectionChange="onDivisionChange" enabled="{= ${worklistView>/filterBar/TrainingZone}.length>1}" selectedKey="{worklistView>/filterBar/TrainingDivision}" placeholder="{i18n>enterDivision}">
										<core:Item key="{Id}" text="{Id}"/>
									</ComboBox>
								</fb:control>
							</fb:FilterGroupItem>
                            <fb:FilterGroupItem visibleInFilterBar="true" groupName="A" name="TrainingDepot" groupTitle="Filters" label="{i18n>colDepot}">
								<fb:control>
									<ComboBox items="{ path: '/MasterDepotSet' }" id="idDepot" enabled="{= ${worklistView>/filterBar/TrainingDivision}.length>1}" selectionChange="onDepotChange" selectedKey="{worklistView>/filterBar/TrainingDepot}" placeholder="{i18n>enterDepot}">
										<core:Item enabled="{parts:['Id','LoginInfo>/UserTypeId','LoginInfo>/AdminDivision'],formatter:'.formatter.fmtLeadDivisionCheck'}" key="{Id}" text="{Depot} ( {Id} )"/>
									</ComboBox>
								</fb:control>
							</fb:FilterGroupItem>
						</fb:filterGroupItems>
					</fb:FilterBar>
				</f:content>
			</f:DynamicPageHeader>
		</f:header>
		<f:content>
			<IconTabBar id="idIconTabBar" expanded="{device>/isNoPhone}" class="sapUiResponsiveContentPadding traininglearning-tab">
				<items>
					<IconTabFilter text="{worklistView>/onlineTraining}">
						<Table id="table" width="auto"
							items="{ path: '/TrainingSet', parameters : { expand : 'TrainingSubTypeDetails' }, filters : [ { path : 'IsArchived' , operator : 'EQ' , value1 : false }, { path : 'TrainingTypeId' , operator : 'EQ' , value1 : 1 } ], sorter: { path: 'StartDate', descending: true } }"
							noDataText="{worklistView>/tableNoData}" growingThreshold="15" busyIndicatorDelay="{worklistView>/tableBusyDelay}" growing="true" growingScrollToLoad="false"
							updateFinished="onUpdateFinished">
							<headerToolbar>
								<OverflowToolbar>
									<ToolbarSpacer/>
                                        <Button text="{i18n>btnAddTraining}" type="Emphasized" icon="sap-icon://add" press="onAddOnlineTraining" visible="{= (${appView>/loggedUserRoleId} !== 2) }">
						            </Button>
								</OverflowToolbar>
							</headerToolbar>
							<columns>
								<Column width="29%">
									<Text text="{i18n>colTrTitle}"/>
								</Column>
                                <Column width="15%">
									<Text text="{i18n>colTrainingType}"/>
								</Column>
                                <Column width="16%">
									<Text text="{i18n>colStartDateTime}"/>
								</Column>
                                <Column width="16%">
									<Text text="{i18n>colEndDateTime}"/>
								</Column>
                                <Column width="9%">
									<Text text="{i18n>colRewardPoints}"/>
								</Column>
                                  <Column width="8%">
									<Text text="{i18n>EnrolledCount}"/>
								</Column>
                                <Column width="10%">
									<Text text="{i18n>CompletedCount}"/>
								</Column>
                                <Column width="8%">
									<Text text="{i18n>colLink}"/>
								</Column>
                                <Column width="7%">
									<Text text="{i18n>colStatus}"/>
								</Column>
                                <Column width="9%" visible="{= (${appView>/loggedUserRoleId} !== 2) }">
									<Text text="{i18n>colAction}"/>
								</Column>
							</columns>
							<items>
								<ColumnListItem press="onListItemPressOnlineTraining" type="Navigation">
									<cells>
										<Text text="{Title}"/>
                                        <Text text="{TrainingSubTypeDetails/TrainingSubType}"/>
                                        <Text text="{parts: [ {path: 'StartDate'} ], formatter : '.formatter.formatDateTime' }"/>
                                        <Text text="{parts: [ {path: 'EndDate'} ], formatter : '.formatter.formatDateTime' }"/>
                                        <Text text="{RewardPoints}"/>
                                        <Text text="{TotalEnrollments}"/>
                                        <FlexBox >
                                            <Text text="{path:'TotalQuizSubmissions'}" visible="{=${TotalQuizSubmissions} === 0}"/>
                                            <Link
                                            visible="{=${TotalQuizSubmissions} !== 0 }"
                                                text="{path:'TotalQuizSubmissions'}"
                                                press="onPressCount"/>
                                        </FlexBox>

                                        <Text text="{= ${Url} === '' ? 'No' : 'Yes'}"/>
                                        <HBox>
                                            <ObjectStatus text="{i18n>inActive}" visible="{= ${Status} === 0 &amp;&amp; ${EndDate} > ${worklistView>/currDate}}" state="Warning"/>
                                            <ObjectStatus text="{i18n>active}" visible="{= ${Status} === 1 &amp;&amp; ${EndDate} > ${worklistView>/currDate}}" state="Success"/>
                                            <ObjectStatus text="{i18n>Expired}" visible="{= ${Status} === 2 &amp;&amp; ${worklistView>/currDate} > ${EndDate}}" state="Error"/>
                                        </HBox>
                                        <HBox visible="{= (${appView>/loggedUserRoleId} !== 2) }">
                                            <Button icon="sap-icon://edit" press="onEditOnlineTraining" type="Transparent" tooltip="{i18n>Edit}" enabled="{= ${StartDate} > ${worklistView>/currDate} &amp;&amp; ${Status} === 0 }"/>
							                <Button icon="sap-icon://delete" press="onDeleteOnlineTraining" type="Transparent" tooltip="{i18n>Delete}"/>
                                        </HBox>
									</cells>
								</ColumnListItem>
							</items>
						</Table>
					</IconTabFilter>
                    <IconTabFilter text="{worklistView>/offlineTraining}">
						<Table id="table2" growing="true" growingThreshold="15" growingScrollToLoad="false" updateFinished="onUpdateFinished2" width="auto" items="{ path: '/TrainingSet', sorter: { path: 'StartDate', descending: true }, filters : [ { path:'IsArchived', operator:'EQ', value1:false }, { path:'TrainingTypeId', operator:'EQ' , value1:2 } ], parameters : { expand : 'TrainingSubTypeDetails' } }" noDataText="{worklistView>/tableNoData}" busyIndicatorDelay="{worklistView>/tableBusyDelay}">
							<headerToolbar>
								<OverflowToolbar>
									<ToolbarSpacer/>
                                    <Button text="{i18n>btnUploadAttendance}" type="Emphasized" icon="sap-icon://upload" press="onAddOfflineTraining" visible="{= (${appView>/loggedUserRoleId} !== 2) }">
							            <layoutData>
								            <OverflowToolbarLayoutData maxWidth="200px" priority="NeverOverflow"/>
							            </layoutData>
						            </Button>
								</OverflowToolbar>
							</headerToolbar>
							<columns>
								<Column width="65%">
									<Text text="{i18n>colTrTitle}"/>
								</Column>
                                <Column width="20%">
									<Text text="{i18n>colTrainingType}"/>
								</Column>
                                <Column width="15%">
									<Text text="{i18n>colAttendanceCount}"/>
								</Column>
                                <!-- <Column width="10%">
									<Text text="{i18n>colRewardPoints}"/>
								</Column> -->
                                <Column width="9%">
									<Text text="{i18n>CompletedCount}"/>
								</Column>
							</columns>
							<items>
								<ColumnListItem press="onListItemPressOfflineTraining" type="Navigation">
									<cells>
										<Text text="{Title}"/>
                                        <Text text="{TrainingSubTypeDetails/TrainingSubType}"/>
                                        <Text text="{PainterAttendanceCount}"/>
                                        <!-- <Text text="{RewardPoints}"/> -->
                                        <FlexBox >
                                            <Text text="{path:'TotalQuizSubmissions'}" visible="{=${TotalQuizSubmissions} === 0}"/>
                                            <Link
                                            visible="{=${TotalQuizSubmissions} !== 0 }"
                                                text="{path:'TotalQuizSubmissions'}"
                                                press="onPressCount"/>
                                        </FlexBox>
									</cells>
								</ColumnListItem>
							</items>
						</Table>
					</IconTabFilter>
					<IconTabFilter text="{worklistView>/video}">
						<Table id="table1" width="auto"
							items="{ path: '/LearningSet', parameters : { expand : 'TrainingSubTypeDetails' }, filters : [ { path : 'IsArchived' , operator : 'EQ' , value1 : false } ], sorter: { path: 'UpdatedAt', descending: true } }"
							noDataText="{worklistView>/tableNoData}" growingThreshold="15" busyIndicatorDelay="{worklistView>/tableBusyDelay}" growing="true" growingScrollToLoad="true"
							updateFinished="onUpdateFinished1">
							<headerToolbar>
								<OverflowToolbar>
									<ToolbarSpacer/>
                                    <Button text="{i18n>btnAddTraining}" type="Emphasized" icon="sap-icon://add" press="onAddVideo" visible="{= (${appView>/loggedUserRoleId} !== 2) }">
							            <layoutData>
								            <OverflowToolbarLayoutData maxWidth="200px" priority="NeverOverflow"/>
							            </layoutData>
						            </Button>
								</OverflowToolbar>
							</headerToolbar>
							<columns>
                                <Column width="14%">
                                    <Text text="{i18n>colTrTitle}"/>
                                </Column>
                                <Column width="15%">
                                    <Text text="{i18n>colTrainingType}"/>
                                </Column>
                                <Column width="20%">
                                    <Text text="{i18n>colLink}"/>
                                </Column>
                                <Column width="10%">
                                    <Text text="{i18n>colCreationDate}"/>
                                </Column>
                                <Column width="5%">
                                    <Text text="{i18n>colRewardPoints}"/>
                                </Column>
                                <Column width="10%">
                                    <Text text="{i18n>colUniqueViewCount}"/>
                                </Column>
                                <Column width="10%">
                                    <Text text="{i18n>colViewCount}"/>
                                </Column>
                                <Column width="9%">
									<Text text="{i18n>CompletedCount}"/>
								</Column>
                                <Column width="7%">
                                    <Text text="{i18n>colStatus}"/>
                                </Column>
                                <Column width="9%" visible="{= (${appView>/loggedUserRoleId} !== 2) }">
                                    <Text text="{i18n>colAction}"/>
                                </Column>
                            </columns>
							<items>
								<ColumnListItem press="onListItemPressVideo" type="Navigation">
									<cells>
                                        <Text text="{Title}"/>
                                        <Text text="{TrainingSubTypeDetails/TrainingSubType}"/>
                                        <Link text="{Url}" target="_blank" href="{Url}"/>
                                        <Text text="{parts: [ {path: 'CreatedAt'} ], formatter : '.formatter.formatDate' }"/>
                                        <Text text="{RewardPoints}"/>
                                        <Text text="{UniqueViewCounts}"/>
                                        <Text text="{TotalViewCounts}"/>
                                        <FlexBox >
                                            <Text text="{path:'TotalQuizSubmissions'}" visible="{=${TotalQuizSubmissions} === 0}"/>
                                            <Link
                                            visible="{=${TotalQuizSubmissions} !== 0 }"
                                                text="{path:'TotalQuizSubmissions'}"
                                                press="onPressCount"/>
                                        </FlexBox>
                                        <HBox>
                                            <ObjectStatus text="{i18n>inActive}" visible="{= ${Status} === 0}" state="Warning"/>
                                            <ObjectStatus text="{i18n>active}" visible="{= ${Status} === 1}" state="Success"/>
                                        </HBox>
                                        <HBox visible="{= (${appView>/loggedUserRoleId} !== 2) }">
                                            <Button icon="sap-icon://edit" press="onEditVideo" type="Transparent" tooltip="{i18n>Edit}" enabled="{= ${Status} === 0 }"/>
							                <Button icon="sap-icon://delete" press="onDeleteVideo" type="Transparent" tooltip="{i18n>Delete}"/>
                                        </HBox>
									</cells>
								</ColumnListItem>
							</items>
						</Table>
					</IconTabFilter>
				</items>
			</IconTabBar>
		</f:content>
	</f:DynamicPage>
</mvc:View>